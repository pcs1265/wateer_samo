spring.application.name=trip_dc


server.servlet.context-path=/

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp


# DataBase Settings : hikariCP : https://github.com/brettwooldridge/HikariCP
spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/trip_dc?serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8
spring.datasource.hikari.username=ssafy
spring.datasource.hikari.password=ssafy
spring.datasource.hikari.pool-name=hikari-pool

# hikariCP property setting
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=50
spring.datasource.hikari.connection-timeout=5000
spring.datasource.hikari.connection-init-sql=SELECT 1
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true

# mybatis
mybatis.type-aliases-package=com.ssafy.**.dto
mybatis.mapper-locations=classpath:/**/mapper/*.xml


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# JWT setting
jwt.salt=ssafy-screte-key-20240404-ssafy-screte-key-20240404-ssafy-screte-key-20240404
#1 hour (millis)
#jwt.access-token.expiretime=3600000
jwt.access-token.expiretime=100000
# 30 days (millis)
#jwt.refresh-token.expiretime=2592000000
jwt.refresh-token.expiretime=2592000000

#log level Setting
logging.level.root=info
logging.level.com.ssafy.vue=debug

# application.properties
spring.web.cors.allow-credentials=true
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*


#mail
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=dodo221130@gmail.com
#spring.mail.password=jkjy rbev zoxw rhwf
#spring.mail.properties.mail.smtp.auth=true //이메일 서버에 인증 요구
#spring.mail.properties.mail.smtp.starttls.enable=true //암호화된 연결을 활성화. STARTTLS는 이메일 전송 중에 보안 계층을 추가하여 데이터의 기밀성을 보호
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=18000 //SMTP 서버에 대한 연결 시도 시, 연결 제한 시간 설정
#spring.mail.properties.mail.smtp.timeout=18000 //SMTP 서버와의 통신 시간 제한 설정
#spring.mail.properties.mail.smtp.writetimeout=18000 //SMTP 서버에 데이터를 전송하는 시간 제한 설정


# Kakao OAuth 설정
oauth.kakao.client-id=51d5deee2572e76d9b0cb7b8f9c578c5
oauth.kakao.url.auth=https://kauth.kakao.com
oauth.kakao.url.api=https://kapi.kakao.com

# Naver OAuth 설정
oauth.naver.secret=W_2DmcLfYU
oauth.naver.client-id=Y2i4SlApP7A1KZsUoott
oauth.naver.url.auth=https://nid.naver.com
oauth.naver.url.api=https://openapi.naver.com



